services:
  zookeeper:
    image: bitnami/zookeeper:3.8.4
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.9.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server kafka:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  kafka-init:
    image: bitnami/kafka:3.9.0
    command: bash -c "
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --partitions 1  --replication-factor 1 --topic ProductOrder
      && /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --partitions 1  --replication-factor 1 --topic ProductInventory
      && /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --partitions 1  --replication-factor 1 --topic ProductOrderEnriched"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
    depends_on:
      kafka:
        condition: service_healthy
    init: true

  ingest-api:
    build: ./src/ingest_api
    ports:
      - "4444:80"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      INVENTORY_TOPIC: ProductInventory
      PRODUCTORDER_TOPIC: ProductOrder

  update-inventory:
    build: ./src/update_inventory
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      INVENTORY_TOPIC: ProductInventory
